{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy NextJS\\\\auth-project\\\\components\\\\auth\\\\auth-form.js\";\nimport { useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\n\nasync function createAccount(email, password) {\n  const data = {\n    email: email,\n    password: password\n  };\n  const res = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const resData = await res.json();\n\n  if (!res.ok) {\n    throw new Error(resData.message || \"Something went wrong\");\n  }\n\n  return resData;\n}\n\nfunction AuthForm() {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const router = useRouter();\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(\"\");\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  async function handleSubmiForm(event) {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    if (isLogin) {\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: email,\n        password: password\n      });\n      console.log(result);\n      setErrorMessage(result.error);\n\n      if (!result.error) {\n        router.replace(\"/profile\");\n      }\n    }\n\n    if (!isLogin) {\n      try {\n        const result = await createAccount(email, password);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmiForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["D:/Udemy NextJS/auth-project/components/auth/auth-form.js"],"names":["useRef","useState","useRouter","classes","signIn","createAccount","email","password","data","res","fetch","method","body","JSON","stringify","headers","resData","json","ok","Error","message","AuthForm","isLogin","setIsLogin","emailRef","passwordRef","router","errorMessage","setErrorMessage","switchAuthModeHandler","prevState","handleSubmiForm","event","preventDefault","current","value","result","redirect","console","log","error","replace","auth","control","actions","toggle"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAGA,eAAeC,aAAf,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8C;AAC5C,QAAMC,IAAI,GAAG;AACXF,IAAAA,KAAK,EAAEA,KADI;AAEXC,IAAAA,QAAQ,EAAEA;AAFC,GAAb;AAKA,QAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFoC;AAG1CO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHiC,GAArB,CAAvB;AAOA,QAAMC,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAtB;;AAEA,MAAI,CAACR,GAAG,CAACS,EAAT,EAAa;AACX,UAAM,IAAIC,KAAJ,CAAUH,OAAO,CAACI,OAAR,IAAmB,sBAA7B,CAAN;AACD;;AACD,SAAOJ,OAAP;AACD;;AAED,SAASK,QAAT,GAAoB;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBtB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMuB,QAAQ,GAAGxB,MAAM,EAAvB;AACA,QAAMyB,WAAW,GAAGzB,MAAM,EAA1B;AACA,QAAM0B,MAAM,GAAGxB,SAAS,EAAxB;AACA,QAAM;AAAA,OAACyB,YAAD;AAAA,OAAcC;AAAd,MAAiC3B,QAAQ,CAAC,EAAD,CAA/C;;AAEA,WAAS4B,qBAAT,GAAiC;AAC/BN,IAAAA,UAAU,CAAEO,SAAD,IAAe,CAACA,SAAjB,CAAV;AACD;;AAED,iBAAeC,eAAf,CAA+BC,KAA/B,EAAsC;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM3B,KAAK,GAAGkB,QAAQ,CAACU,OAAT,CAAiBC,KAA/B;AAEA,UAAM5B,QAAQ,GAAGkB,WAAW,CAACS,OAAZ,CAAoBC,KAArC;;AAEA,QAAIb,OAAJ,EAAa;AACX,YAAMc,MAAM,GAAG,MAAMhC,MAAM,CAAC,aAAD,EAAgB;AACzCiC,QAAAA,QAAQ,EAAE,KAD+B;AAEzC/B,QAAAA,KAAK,EAAEA,KAFkC;AAGzCC,QAAAA,QAAQ,EAAEA;AAH+B,OAAhB,CAA3B;AAMA+B,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAR,MAAAA,eAAe,CAACQ,MAAM,CAACI,KAAR,CAAf;;AAEA,UAAI,CAACJ,MAAM,CAACI,KAAZ,EAAmB;AACjBd,QAAAA,MAAM,CAACe,OAAP,CAAe,UAAf;AACD;AACF;;AACD,QAAI,CAACnB,OAAL,EAAc;AACZ,UAAI;AACF,cAAMc,MAAM,GAAG,MAAM/B,aAAa,CAACC,KAAD,EAAQC,QAAR,CAAlC;AACA+B,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,OAHD,CAGE,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;AACF;;AAED,sBACE;AAAS,IAAA,SAAS,EAAErC,OAAO,CAACuC,IAA5B;AAAA,4BACE;AAAA,gBAAKpB,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAES,eAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE5B,OAAO,CAACwC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,QAAQ,MAAvC;AAAwC,UAAA,GAAG,EAAEnB;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAErB,OAAO,CAACwC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAC,UAA1B;AAAqC,UAAA,QAAQ,MAA7C;AAA8C,UAAA,GAAG,EAAElB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACyC,OAAxB;AAAA,gCACE;AAAA,oBAAStB,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEnB,OAAO,CAAC0C,MAFrB;AAGE,UAAA,OAAO,EAAEhB,qBAHX;AAAA,oBAKGP,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;AAED,eAAeD,QAAf","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport classes from \"./auth-form.module.css\";\r\nimport { signIn } from \"next-auth/client\";\r\n\r\n\r\nasync function createAccount(email, password) {\r\n  const data = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n  \r\n  const res = await fetch(\"/api/auth/signup\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const resData = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(resData.message || \"Something went wrong\");\r\n  }\r\n  return resData;\r\n}\r\n\r\nfunction AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const router = useRouter();\r\n  const [errorMessage,setErrorMessage] = useState(\"\")\r\n\r\n  function switchAuthModeHandler() {\r\n    setIsLogin((prevState) => !prevState);\r\n  }\r\n\r\n  async function handleSubmiForm(event) {\r\n    event.preventDefault();\r\n\r\n    const email = emailRef.current.value;\r\n\r\n    const password = passwordRef.current.value;\r\n    \r\n    if (isLogin) {\r\n      const result = await signIn(\"credentials\", {\r\n        redirect: false,\r\n        email: email,\r\n        password: password,\r\n      });\r\n\r\n      console.log(result);\r\n      setErrorMessage(result.error);\r\n\r\n      if (!result.error) {\r\n        router.replace(\"/profile\");\r\n      }\r\n    }\r\n    if (!isLogin) {\r\n      try {\r\n        const result = await createAccount(email, password);\r\n        console.log(result);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={handleSubmiForm}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required ref={emailRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input type=\"password\" id=\"password\" required ref={passwordRef} />\r\n        </div>\r\n        {/* <p>{error}</p> */}\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}