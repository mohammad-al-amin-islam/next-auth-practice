{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\auth-project\\\\components\\\\auth\\\\auth-form.js\";\nimport { useRef, useState } from \"react\";\nimport classes from \"./auth-form.module.css\";\n\nasync function createAccount(email, password) {\n  const data = {\n    email: email,\n    password: password\n  };\n  fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(data => console.log(data));\n}\n\nfunction AuthForm() {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  function handleSubmiForm(event) {\n    event.preventDefault();\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    if (isLogin) {}\n\n    if (!isLogin) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["D:/auth-project/components/auth/auth-form.js"],"names":["useRef","useState","classes","createAccount","email","password","data","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","AuthForm","isLogin","setIsLogin","switchAuthModeHandler","prevState","handleSubmiForm","event","preventDefault","emailRef","passwordRef","current","value","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./auth-form.module.css\";\r\n\r\nasync function createAccount(email, password) {\r\n  const data = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n  fetch(\"/api/auth/signup\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data));\r\n}\r\n\r\nfunction AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  function switchAuthModeHandler() {\r\n    setIsLogin((prevState) => !prevState);\r\n  }\r\n\r\n  function handleSubmiForm(event) {\r\n    event.preventDefault();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const email = emailRef.current.value;\r\n\r\n    const password = passwordRef.current.value;\r\n\r\n    if (isLogin) {\r\n    }\r\n    if (!isLogin) {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required ref={emailRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input type=\"password\" id=\"password\" required ref={passwordRef} />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}