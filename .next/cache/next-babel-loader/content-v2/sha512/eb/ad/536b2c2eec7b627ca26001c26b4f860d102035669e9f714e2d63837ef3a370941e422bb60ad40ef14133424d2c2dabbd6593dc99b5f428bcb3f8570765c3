{"ast":null,"code":"import _regeneratorRuntime from \"D:/auth-project/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"D:/auth-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\auth-project\\\\components\\\\auth\\\\auth-form.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./auth-form.module.css\";\n\nfunction createAccount(_x, _x2) {\n  return _createAccount.apply(this, arguments);\n}\n\nfunction _createAccount() {\n  _createAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = {\n              email: email,\n              password: password\n            };\n            fetch(\"/api/auth/signup\", {\n              method: \"POST\",\n              body: JSON.stringify(data),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              return console.log(data);\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createAccount.apply(this, arguments);\n}\n\nfunction AuthForm() {\n  _s();\n\n  var _useState = useState(true),\n      isLogin = _useState[0],\n      setIsLogin = _useState[1];\n\n  var emailRef = useRef();\n  var passwordRef = useRef();\n\n  function switchAuthModeHandler() {\n    setIsLogin(function (prevState) {\n      return !prevState;\n    });\n  }\n\n  function handleSubmiForm(_x3) {\n    return _handleSubmiForm.apply(this, arguments);\n  }\n\n  function _handleSubmiForm() {\n    _handleSubmiForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var email, password, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              email = emailRef.current.value;\n              password = passwordRef.current.value;\n\n              if (isLogin) {}\n\n              if (isLogin) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return createAccount(email, password);\n\n            case 7:\n              data = _context.sent;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmiForm.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmiForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthForm, \"6fCgByItV87rON1yeL5+jsb6DGI=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["D:/auth-project/components/auth/auth-form.js"],"names":["useRef","useState","classes","createAccount","email","password","data","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","AuthForm","isLogin","setIsLogin","emailRef","passwordRef","switchAuthModeHandler","prevState","handleSubmiForm","event","preventDefault","current","value","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./auth-form.module.css\";\r\n\r\nasync function createAccount(email, password) {\r\n  const data = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n  fetch(\"/api/auth/signup\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data));\r\n}\r\n\r\nfunction AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n  function switchAuthModeHandler() {\r\n    setIsLogin((prevState) => !prevState);\r\n  }\r\n\r\n  async function handleSubmiForm(event) {\r\n    event.preventDefault();\r\n    \r\n\r\n    const email = emailRef.current.value;\r\n\r\n    const password = passwordRef.current.value;\r\n\r\n    if (isLogin) {\r\n    }\r\n    if (!isLogin) {\r\n      const data = await createAccount(email,password);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={handleSubmiForm}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required ref={emailRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input type=\"password\" id=\"password\" required ref={passwordRef} />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}