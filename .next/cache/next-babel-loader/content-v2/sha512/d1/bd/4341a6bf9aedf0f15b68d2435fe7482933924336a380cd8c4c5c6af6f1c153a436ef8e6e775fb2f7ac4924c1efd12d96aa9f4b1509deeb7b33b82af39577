{"ast":null,"code":"import { hashPassword } from \"../../../lib/auth\";\nimport { dbConncect } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (!req.method === \"POST\") {\n    return;\n  } //   const { data } = req.body.emai;\n\n\n  const email = req.body.email;\n  const password = req.body.password;\n\n  if (!email || !email.includes(\"@\") || !password || password.trim().length < 7) {\n    res.status(422).json({\n      message: \"Invalid email or password\"\n    });\n    return;\n  }\n\n  const hasedPassword = await hashPassword(password);\n  const loginInfo = {\n    email: email,\n    password: hasedPassword\n  };\n  const client = await dbConncect();\n  await client.connect();\n  const db = client.db(\"nexAuth\");\n  const collection = db.collection(\"loginInfo\");\n  const result = await collection.insertOne(loginInfo);\n  res.status(201).json({\n    message: result\n  });\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/auth-project/pages/api/auth/signup.js"],"names":["hashPassword","dbConncect","handler","req","res","method","email","body","password","includes","trim","length","status","json","message","hasedPassword","loginInfo","client","connect","db","collection","result","insertOne"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAI,CAACD,GAAG,CAACE,MAAL,KAAgB,MAApB,EAA4B;AAC1B;AACD,GAH8B,CAIjC;;;AAEE,QAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASD,KAAvB;AACA,QAAME,QAAQ,GAAGL,GAAG,CAACI,IAAJ,CAASC,QAA1B;;AAEA,MACE,CAACF,KAAD,IACA,CAACA,KAAK,CAACG,QAAN,CAAe,GAAf,CADD,IAEA,CAACD,QAFD,IAGAA,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,GAAyB,CAJ3B,EAKE;AACAP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;AACD;;AAED,QAAMC,aAAa,GAAG,MAAMf,YAAY,CAACQ,QAAD,CAAxC;AACA,QAAMQ,SAAS,GAAG;AAChBV,IAAAA,KAAK,EAAEA,KADS;AAEhBE,IAAAA,QAAQ,EAAEO;AAFM,GAAlB;AAKA,QAAME,MAAM,GAAG,MAAMhB,UAAU,EAA/B;AAEA,QAAMgB,MAAM,CAACC,OAAP,EAAN;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,SAAV,CAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,WAAd,CAAnB;AAEA,QAAMC,MAAM,GAAG,MAAMD,UAAU,CAACE,SAAX,CAAqBN,SAArB,CAArB;AACAZ,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAEO;AAAX,GAArB;AACD;;AACD,eAAenB,OAAf","sourcesContent":["import { hashPassword } from \"../../../lib/auth\";\r\nimport { dbConncect } from \"../../../lib/db\";\r\n\r\nasync function handler(req, res) {\r\n  if (!req.method === \"POST\") {\r\n    return\r\n  }\r\n//   const { data } = req.body.emai;\r\n\r\n  const email = req.body.email;\r\n  const password = req.body.password;\r\n\r\n  if (\r\n    !email ||\r\n    !email.includes(\"@\") ||\r\n    !password ||\r\n    password.trim().length < 7\r\n  ) {\r\n    res.status(422).json({ message: \"Invalid email or password\" });\r\n    return;\r\n  }\r\n\r\n  const hasedPassword = await hashPassword(password);\r\n  const loginInfo = {\r\n    email: email,\r\n    password: hasedPassword,\r\n  };\r\n\r\n  const client = await dbConncect();\r\n\r\n  await client.connect();\r\n\r\n  const db = client.db(\"nexAuth\");\r\n  const collection = db.collection(\"loginInfo\");\r\n\r\n  const result = await collection.insertOne(loginInfo);\r\n  res.status(201).json({ message: result });\r\n}\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}