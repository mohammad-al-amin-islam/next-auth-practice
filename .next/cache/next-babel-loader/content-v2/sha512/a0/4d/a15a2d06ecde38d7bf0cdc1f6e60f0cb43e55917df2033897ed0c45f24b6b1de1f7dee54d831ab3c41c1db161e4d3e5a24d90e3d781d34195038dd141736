{"ast":null,"code":"import _regeneratorRuntime from \"D:/Udemy NextJS/auth-project/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"D:/Udemy NextJS/auth-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\Udemy NextJS\\\\auth-project\\\\components\\\\auth\\\\auth-form.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\n\nfunction createAccount(_x, _x2) {\n  return _createAccount.apply(this, arguments);\n}\n\nfunction _createAccount() {\n  _createAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var data, res, resData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = {\n              email: email,\n              password: password\n            };\n            _context2.next = 3;\n            return fetch(\"/api/auth/signup\", {\n              method: \"POST\",\n              body: JSON.stringify(data),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.json();\n\n          case 6:\n            resData = _context2.sent;\n\n            if (res.ok) {\n              _context2.next = 9;\n              break;\n            }\n\n            throw new Error(resData.message || \"Something went wrong\");\n\n          case 9:\n            return _context2.abrupt(\"return\", resData);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createAccount.apply(this, arguments);\n}\n\nfunction AuthForm() {\n  _s();\n\n  var _useState = useState(true),\n      isLogin = _useState[0],\n      setIsLogin = _useState[1];\n\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var router = useRouter();\n\n  var _useState2 = useState(\"\"),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  function switchAuthModeHandler() {\n    setIsLogin(function (prevState) {\n      return !prevState;\n    });\n  }\n\n  function handleSubmiForm(_x3) {\n    return _handleSubmiForm.apply(this, arguments);\n  }\n\n  function _handleSubmiForm() {\n    _handleSubmiForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var email, password, result, _result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              email = emailRef.current.value;\n              password = passwordRef.current.value;\n\n              if (!isLogin) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return signIn(\"credentials\", {\n                redirect: false,\n                email: email,\n                password: password\n              });\n\n            case 6:\n              result = _context.sent;\n              console.log(result);\n              setErrorMessage(result.error);\n\n              if (!result.error) {\n                router.replace(\"/profile\");\n              }\n\n            case 10:\n              if (isLogin) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 11;\n              _context.next = 14;\n              return createAccount(email, password);\n\n            case 14:\n              _result = _context.sent;\n              console.log(_result);\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](11);\n              console.log(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[11, 18]]);\n    }));\n    return _handleSubmiForm.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmiForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthForm, \"Q+a90SCZ2KlOazwcF18x5si0wvc=\", false, function () {\n  return [useRouter];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["D:/Udemy NextJS/auth-project/components/auth/auth-form.js"],"names":["useRef","useState","useRouter","classes","signIn","createAccount","email","password","data","fetch","method","body","JSON","stringify","headers","res","json","resData","ok","Error","message","AuthForm","isLogin","setIsLogin","emailRef","passwordRef","router","errorMessage","setErrorMessage","switchAuthModeHandler","prevState","handleSubmiForm","event","preventDefault","current","value","redirect","result","console","log","error","replace","auth","control","color","actions","toggle"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport classes from \"./auth-form.module.css\";\r\nimport { signIn } from \"next-auth/client\";\r\n\r\n\r\nasync function createAccount(email, password) {\r\n  const data = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n  \r\n  const res = await fetch(\"/api/auth/signup\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const resData = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(resData.message || \"Something went wrong\");\r\n  }\r\n  return resData;\r\n}\r\n\r\nfunction AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const router = useRouter();\r\n  const [errorMessage,setErrorMessage] = useState(\"\")\r\n\r\n  function switchAuthModeHandler() {\r\n    setIsLogin((prevState) => !prevState);\r\n  }\r\n\r\n  async function handleSubmiForm(event) {\r\n    event.preventDefault();\r\n\r\n    const email = emailRef.current.value;\r\n\r\n    const password = passwordRef.current.value;\r\n    \r\n    if (isLogin) {\r\n      const result = await signIn(\"credentials\", {\r\n        redirect: false,\r\n        email: email,\r\n        password: password,\r\n      });\r\n\r\n      console.log(result);\r\n      setErrorMessage(result.error);\r\n\r\n      if (!result.error) {\r\n        router.replace(\"/profile\");\r\n      }\r\n    }\r\n    if (!isLogin) {\r\n      try {\r\n        const result = await createAccount(email, password);\r\n        console.log(result);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={handleSubmiForm}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required ref={emailRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input type=\"password\" id=\"password\" required ref={passwordRef} />\r\n        </div>\r\n        <p style={{color:\"white\"}}>{errorMessage}</p>\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}