{"ast":null,"code":"import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport { checkPassword } from \"../../../lib/auth\";\nimport { dbConncect } from \"../../../lib/db\";\nexport default NextAuth({\n  session: {\n    jwt: true\n  },\n  providers: [Providers.Credentials({\n    async authorize(credentials) {\n      console.log(credentials);\n      const client = await dbConncect();\n      await client.connect();\n      const db = client.db(\"nextAuth\");\n      const collection = db.collection(\"loginInfo\");\n      const existEmail = await collection.findOne({\n        email: credentials.email\n      });\n\n      if (!existEmail) {\n        client.close();\n        throw new Error(\"No user found\");\n      }\n\n      const isValid = await checkPassword(credentials.password, existEmail.password);\n\n      if (!isValid) {\n        (await client).close();\n        throw new Error(\"Could not log you in\");\n      }\n\n      client.close();\n      return {\n        email: existEmail.email\n      };\n    }\n\n  })]\n});","map":{"version":3,"sources":["D:/auth-project/pages/api/auth/[...nextauth].js"],"names":["NextAuth","Providers","checkPassword","dbConncect","session","jwt","providers","Credentials","authorize","credentials","console","log","client","connect","db","collection","existEmail","findOne","email","close","Error","isValid","password"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,eAAeH,QAAQ,CAAC;AACtBI,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE,GADa;AAItBC,EAAAA,SAAS,EAAE,CACTL,SAAS,CAACM,WAAV,CAAsB;AACpB,UAAMC,SAAN,CAAgBC,WAAhB,EAA6B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,YAAMG,MAAM,GAAG,MAAMT,UAAU,EAA/B;AACA,YAAMS,MAAM,CAACC,OAAP,EAAN;AAEA,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,UAAV,CAAX;AACA,YAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,WAAd,CAAnB;AAEA,YAAMC,UAAU,GAAG,MAAMD,UAAU,CAACE,OAAX,CAAmB;AAC1CC,QAAAA,KAAK,EAAET,WAAW,CAACS;AADuB,OAAnB,CAAzB;;AAGA,UAAI,CAACF,UAAL,EAAiB;AACfJ,QAAAA,MAAM,CAACO,KAAP;AACA,cAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED,YAAMC,OAAO,GAAG,MAAMnB,aAAa,CACjCO,WAAW,CAACa,QADqB,EAEjCN,UAAU,CAACM,QAFsB,CAAnC;;AAIA,UAAI,CAACD,OAAL,EAAc;AACZ,SAAC,MAAMT,MAAP,EAAeO,KAAf;AACA,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAEDR,MAAAA,MAAM,CAACO,KAAP;AACA,aAAO;AACLD,QAAAA,KAAK,EAAEF,UAAU,CAACE;AADb,OAAP;AAGD;;AA9BmB,GAAtB,CADS;AAJW,CAAD,CAAvB","sourcesContent":["import NextAuth from \"next-auth\";\r\nimport Providers from \"next-auth/providers\";\r\nimport { checkPassword } from \"../../../lib/auth\";\r\nimport { dbConncect } from \"../../../lib/db\";\r\n\r\nexport default NextAuth({\r\n  session: {\r\n    jwt: true,\r\n  },\r\n  providers: [\r\n    Providers.Credentials({\r\n      async authorize(credentials) {\r\n        console.log(credentials)\r\n        const client = await dbConncect();\r\n        await client.connect();\r\n\r\n        const db = client.db(\"nextAuth\");\r\n        const collection = db.collection(\"loginInfo\");\r\n\r\n        const existEmail = await collection.findOne({\r\n          email: credentials.email,\r\n        });\r\n        if (!existEmail) {\r\n          client.close();\r\n          throw new Error(\"No user found\");\r\n        }\r\n\r\n        const isValid = await checkPassword(\r\n          credentials.password,\r\n          existEmail.password\r\n        );\r\n        if (!isValid) {\r\n          (await client).close();\r\n          throw new Error(\"Could not log you in\");\r\n        }\r\n\r\n        client.close();\r\n        return {\r\n          email: existEmail.email,\r\n        };\r\n      },\r\n    }),\r\n  ],\r\n});\r\n"]},"metadata":{},"sourceType":"module"}